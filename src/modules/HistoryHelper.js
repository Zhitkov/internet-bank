"use strict";

import moment from 'moment';
import appSettingsHelper from './AppSettingsHelper.js';
import {
    timeFormat,
    dateFormat
} from './LanguagesHelper.js';
import { bindStr } from './Utils.js';

/**
 * @typedef {Object} IHistoryItemFromApi Generated by API data format
 * @property {number} id ID of the curtain history item
 * @property {number} type Type (binding to historyType) of the item
 * @property {number} source_id Plain ID of the source account
 * @property {number} destination_id Plain ID of the destination account
 * @property {number} user_id ID of user that initialized this item
 * @property {number} currency Currency code
 * @property {string} currency_name Name of the currency
 * @property {number} amount Amount of the transaction
 * @property {Date} created When this transaction was created
 * @property {Object} transaction_details If any details were added
 * @property {Object} source_details Details for the source account
 */

/**
 * @typedef {Object} IHistoryItemInternal Used for internal app needs item
 * @property {number} id
 * @property {number} amount
 * @property {string} currency
 * @property {string} time
 * @property {string} date
 * @property {Object} dateObject A Moment object instance to make manipulations
 * @property {string} type
 * @property {string} icon An icon to add when disaply it
 */

/**
 *
 * @param {IHistoryItemFromApi} dataInApiFormat
 * @returns {IHistoryItemInternal}
 */

export const convertHistoryItemFromApi = dataInApiFormat => {
    const date = moment(dataInApiFormat.created),
        historyItemTypes = appSettingsHelper.getDataSet('historyTypes');

    const _getIcon = () => {
        switch(bindStr(historyItemTypes, dataInApiFormat.type)) {
            case 'incoming':
                return 'transfer-income';

            case 'reverse':
                return 'transfer-reversed';

            case 'complete':
                return 'transfer-complete';

            default:
                return '';
        }
    };


    return {
        id: dataInApiFormat.id,
        amount: dataInApiFormat.amount,
        currency: dataInApiFormat.currency_name,
        time: date.format(timeFormat()),
        date: date.format(dateFormat()),
        dateObject: date,
        type: bindStr(historyItemTypes, dataInApiFormat.type),
        icon: _getIcon()
    }
};